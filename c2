#include "ns3/core-module.h"
#include "ns3/network-module.h"
#include "ns3/internet-module.h"
#include "ns3/point-to-point-module.h"
#include "ns3/applications-module.h"
#include "ns3/mobility-module.h"
#include "ns3/netanim-module.h"
using namespace ns3;
NS_LOG_COMPONENT_DEFINE("ThreeNodeP2P");
int main() {
Time::SetResolution(Time::NS);
LogComponentEnable("UdpEchoClientApplication", LOG_LEVEL_INFO);
LogComponentEnable("UdpEchoServerApplication", LOG_LEVEL_INFO);
NodeContainer nodes;
nodes.Create(3);
NodeContainer n0n1 = NodeContainer(nodes.Get(0), nodes.Get(1));
NodeContainer n2n1 = NodeContainer(nodes.Get(2), nodes.Get(1));
PointToPointHelper pointToPoint;
pointToPoint.SetDeviceAttribute("DataRate", StringValue("5Mbps"));
pointToPoint.SetChannelAttribute("Delay", StringValue("2ms"));
NetDeviceContainer devices1 = pointToPoint.Install(n0n1);
NetDeviceContainer devices2 = pointToPoint.Install(n2n1);
AsciiTraceHelper ascii;
pointToPoint.EnableAsciiAll(ascii.CreateFileStream("Second.tr"));
InternetStackHelper stack;
stack.Install(nodes);
Ipv4AddressHelper address;
address.SetBase("10.1.1.0", "255.255.255.0");
Ipv4InterfaceContainer interfaces1 = address.Assign(devices1);
address.SetBase("10.1.2.0", "255.255.255.0");
Ipv4InterfaceContainer interfaces2 = address.Assign(devices2);
MobilityHelper mobility;
mobility.SetMobilityModel("ns3::ConstantPositionMobilityModel");
mobility.Install(nodes);
Ptr<ConstantPositionMobilityModel> mob0 = nodes.Get(0)-
>GetObject<ConstantPositionMobilityModel>();
Ptr<ConstantPositionMobilityModel> mob1 = nodes.Get(1)-
>GetObject<ConstantPositionMobilityModel>();
Ptr<ConstantPositionMobilityModel> mob2 = nodes.Get(2)-
>GetObject<ConstantPositionMobilityModel>();
mob0->SetPosition(Vector(400.0, 500.0, 0.0));
mob1->SetPosition(Vector(500.0, 500.0, 0.0)); //Server
mob2->SetPosition(Vector(600.0, 500.0, 0.0));
UdpEchoServerHelper echoServer(9);
ApplicationContainer serverApps = echoServer.Install(nodes.Get(1));
serverApps.Start(Seconds(1.0));
serverApps.Stop(Seconds(10.0));
UdpEchoClientHelper echoClient1(interfaces1.GetAddress(1), 9);
echoClient1.SetAttribute("MaxPackets", UintegerValue(3));
echoClient1.SetAttribute("Interval", TimeValue(Seconds(1.0)));
echoClient1.SetAttribute("PacketSize", UintegerValue(1024));
ApplicationContainer clientApps1 = echoClient1.Install(nodes.Get(0));
clientApps1.Start(Seconds(2.0));
clientApps1.Stop(Seconds(10.0));
UdpEchoClientHelper echoClient2(interfaces2.GetAddress(1), 9);
echoClient2.SetAttribute("MaxPackets", UintegerValue(3));
echoClient2.SetAttribute("Interval", TimeValue(Seconds(1.0)));
echoClient2.SetAttribute("PacketSize", UintegerValue(1024));
ApplicationContainer clientApps2 = echoClient2.Install(nodes.Get(2));
clientApps2.Start(Seconds(3.0));
clientApps2.Stop(Seconds(10.0));
AnimationInterface anim("Second.xml");
anim.SetConstantPosition(nodes.Get(0), 350.0, 300.0);
anim.SetConstantPosition(nodes.Get(1), 500.0, 500.0); //Server
anim.SetConstantPosition(nodes.Get(2), 650.0, 300.0); 
Simulator::Run();
Simulator::Destroy();
return 0;
}
